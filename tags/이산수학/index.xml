<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>이산수학 on Ssabum&#39;s Devlog</title>
    <link>https://ssabum.github.io/tags/%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/</link>
    <description>Recent content in 이산수학 on Ssabum&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ssabum.github.io/tags/%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[CS]이산수학 3rd</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-3rd/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-3rd/</guid>
      <description>알고리즘  순서대로 정의된 절차
모든 동작은 명확하게 정의되어 실행 가능해야 한다.
일정한 시간 안에 반드시 원하는 결과가 나와야 한다.
 1. 알고리즘 구조  순차적 구조 분기 구조 반복 구조 점프 구조  2. 알고리즘 기술 방법  플로우 차트 프로그램 언어 코드 pseudocode  그래프  정점vertex과 간선edge들의 집합으로 이루어진 집합
 1. 오일러 그래프  오일러 경로 : 그래프의 모든 연결선을 한번만 방문하는 경로 오릴러 순환 : 시작점과 끝점이 동일한 오일러 경로 오일러 그래프 : 오일러 순환이 존재하는 그래프 차수 : 정점에 접합된 연결선의 수  2.</description>
    </item>
    
    <item>
      <title>[CS]이산수학 4th</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-4th/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-4th/</guid>
      <description>언어  기본요소들의 집합으로 만들어지는 문자열
  알파벳 : 기호들의 집합 문법 : 알파벳으로부터 문장들의 집합을 형성하는 규칙이 존재 의미론 : 규칙에 합당하게 만들어진 문장들이 어떤 의미를 갖는지 결정  1. 형식언어 구성요소 : 심벌, 알파벳, 문자열, 공문자열
2. 구-구문 문법 G = (V, T, S, P) 👉 V : 기호의 집합 T : 단말기호 S : 시작기호 P : 생성규칙

3. 정규식 
오토마타 1. 유한 상태기계  상태가 유한개 존재하는 기계</description>
    </item>
    
    <item>
      <title>[CS]이산수학</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/</guid>
      <description>이산수학(Discrete mathematics)  불연속적인 숫자를 다루는 수학
컴퓨터를 위한 수학, 참과 거짓으로 판단할 수 있으며 자료구조 또는 알고리즘의 베이스, 논리적 사고, 컴퓨팅 사고력 향상
 1. 명제  참이나 거짓으로 진리를 구분할 수 있는 문장 명제는 0또는 1만을 가지는 컴퓨터 메모리처럼 항상 참과 거짓 중 하나의 값만을 가짐 여러 개의 명제를 조합할 수 있음  2. 연산자 명제를 다루기 위한 도구

3. 명제의 역, 이, 대우  조건 명제에서 사용되는 역, 이, 대우는 하나의 명제를 변형하여 표현 증명하기 어려운 명제는 대우를 이용하여 증명할 수 있다 대우가 참인 경우 본 명제 또한 참이라는 특성을 가지고 있다</description>
    </item>
    
    <item>
      <title>[CS]이산수학 2nd</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2nd/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2nd/</guid>
      <description>명제  명제 = 주어 + 술어
 1. 명제 판별법  사실명제 : 관찰, 측정, 실험 논리명제 : 수학, 논리학  2. 복합명제(compound proposition) 단순명제의 조합으로 이루어진 명제
추론(Reasoning)  참으로 알고 있는 명제로부터 새로운 참인 명제를 찾는 과정
  연역법 : p → q, p가 참이므로 q가 참 귀납법 : 개별적 사실을 말하는 명제로부터 일반적인 결론을 도출 성급한 일반화 : 몇 개의 사례나 경험으로 전체 또는 전체의 속성을 단정짓고 판단  부울  어떤 명제의 참과 거짓을 이진수에 대응시켜 명제와 명제간의 관계를 수학적으로 표현</description>
    </item>
    
  </channel>
</rss>
