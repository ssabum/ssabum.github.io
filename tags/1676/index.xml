<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1676 on Ssabum&#39;s Devlog</title>
    <link>https://ssabum.github.io/tags/1676/</link>
    <description>Recent content in 1676 on Ssabum&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ssabum.github.io/tags/1676/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>백준 1676번 팩토리얼 0의 개수</title>
      <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1676%EB%B2%88-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-0%EC%9D%98-%EA%B0%9C%EC%88%98/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1676%EB%B2%88-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-0%EC%9D%98-%EA%B0%9C%EC%88%98/</guid>
      <description>1676번 팩토리얼 0의 개수 문제 보러가기
🅰 코드 # n 입력 (0 ~ 500) N = int(input()) # 팩토리얼 계산 # 뒤에서부터 처음 0이 아닌 숫자가 나올 때까지 0의 개수 → 5의 개수 print(N//5 + N//25 + N//125) ✅ 후기  알고리즘 코딩 문제라기 보다는 그냥 창의력 문제인 느낌이 물씬 풍겼다. 규칙을 찾기 위해 30!까지 숫자를 나열해 보면서 코드에서도 나와 있듯이 5의 개수로 0의 개수가 정해지는 규칙이 있다. 여기서 주의 할 점이 5, 25, 125를 따로 생각해준 것처럼 5의 제곱 형태일 때는 여러개가 있기 때문에 이점을 고려해야 한다는 것이다.</description>
    </item>
    
  </channel>
</rss>
