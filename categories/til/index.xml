<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on Ssabum&#39;s Devlog</title>
    <link>https://ssabum.github.io/categories/til/</link>
    <description>Recent content in TIL on Ssabum&#39;s Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ssabum.github.io/categories/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Git]git-flow</title>
      <link>https://ssabum.github.io/content/gitgit-flow/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/gitgit-flow/</guid>
      <description>🛠 버전 관리 시스템 어느 정도 규모가 있는 소프트웨어를 개발하다보면 소스코드의 버전 관리 시스템(Version Control System)을 사용하게 된다. 비교적 오래된 프로젝트의 경우 SVN(Subversion)이나 CVS(Concurrent Versions System), 심지어 파일 서버에 소스코드를 보관하는 형태로 코드를 관리하는 경우도 있다. 하지만 최근에는 DVCS(Distributed Concurrent Versions System) 인 git으로 어느정도 통일되는 추세이다. git이 갖는 큰 장점중 하나는 효율적인 브랜치 관리다. 쉽게 브랜치를 생성하여 기능을 추가하거나 버그를 수정할 수 있고, 만들어진 브랜치를 손쉽게 병합 할 수 있다.</description>
    </item>
    
    <item>
      <title>[SQL]MySQL</title>
      <link>https://ssabum.github.io/content/sqlmysql/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/sqlmysql/</guid>
      <description>MySQL👨‍💻  MySQL은 가장 널리 사용되고 있는 관계형 데이터베이스 관리 시스템(RDBMS: Relational DBMS)이다!
 1. SQL문 기초  SHOW DATABASES : 서버에 있는 DB보여주기 USE : 특정 DB 사용 SHOW TABLE, SHOW TABLE STATUS : 해당 DB의 테이블 이름보기 / 정보 조회 DESCRIBE (DESC) : 특정 테이블에 무슨 열이 있는지 확인 SELECT : 원하는 결과 출력하기 WHERE : 출력을 위한 조건 BETWEEN : 조건이 특정값 사이에 있을 때 IN : 안에 있는지 없는지 LIKE : _ 한글자 % / 글자수 제한 X Sub Query : =로 연결한 서브쿼리 ANY(SOME) : 하나라도 만족하면 ALL : 모두 만족 ORDER BY : 정렬 AES 오름차순 / DESC 내림차순 DISTINCT : 중복제거 LIMIT : 출력할 결과물 개수제한 GROUP BY : 그룹으로 묶어서 집계함수와 함께 사용 HAVING : 집계함수에 대한 조건 ROLLUP : GROUP BY절에서 WITH ROLLUP으로 사용하며 총합 또는 중간합계 JOIN : 여러 테이블을 합칠때 사용, ON을 통해 조건을 제시  2.</description>
    </item>
    
    <item>
      <title>[CS]이산수학 3rd</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-3rd/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-3rd/</guid>
      <description>알고리즘  순서대로 정의된 절차
모든 동작은 명확하게 정의되어 실행 가능해야 한다.
일정한 시간 안에 반드시 원하는 결과가 나와야 한다.
 1. 알고리즘 구조  순차적 구조 분기 구조 반복 구조 점프 구조  2. 알고리즘 기술 방법  플로우 차트 프로그램 언어 코드 pseudocode  그래프  정점vertex과 간선edge들의 집합으로 이루어진 집합
 1. 오일러 그래프  오일러 경로 : 그래프의 모든 연결선을 한번만 방문하는 경로 오릴러 순환 : 시작점과 끝점이 동일한 오일러 경로 오일러 그래프 : 오일러 순환이 존재하는 그래프 차수 : 정점에 접합된 연결선의 수  2.</description>
    </item>
    
    <item>
      <title>[CS]이산수학 4th</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-4th/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-4th/</guid>
      <description>언어  기본요소들의 집합으로 만들어지는 문자열
  알파벳 : 기호들의 집합 문법 : 알파벳으로부터 문장들의 집합을 형성하는 규칙이 존재 의미론 : 규칙에 합당하게 만들어진 문장들이 어떤 의미를 갖는지 결정  1. 형식언어 구성요소 : 심벌, 알파벳, 문자열, 공문자열
2. 구-구문 문법 G = (V, T, S, P) 👉 V : 기호의 집합 T : 단말기호 S : 시작기호 P : 생성규칙

3. 정규식 
오토마타 1. 유한 상태기계  상태가 유한개 존재하는 기계</description>
    </item>
    
    <item>
      <title>[CS]이산수학</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99/</guid>
      <description>이산수학(Discrete mathematics)  불연속적인 숫자를 다루는 수학
컴퓨터를 위한 수학, 참과 거짓으로 판단할 수 있으며 자료구조 또는 알고리즘의 베이스, 논리적 사고, 컴퓨팅 사고력 향상
 1. 명제  참이나 거짓으로 진리를 구분할 수 있는 문장 명제는 0또는 1만을 가지는 컴퓨터 메모리처럼 항상 참과 거짓 중 하나의 값만을 가짐 여러 개의 명제를 조합할 수 있음  2. 연산자 명제를 다루기 위한 도구

3. 명제의 역, 이, 대우  조건 명제에서 사용되는 역, 이, 대우는 하나의 명제를 변형하여 표현 증명하기 어려운 명제는 대우를 이용하여 증명할 수 있다 대우가 참인 경우 본 명제 또한 참이라는 특성을 가지고 있다</description>
    </item>
    
    <item>
      <title>[CS]이산수학 2nd</title>
      <link>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2nd/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/cs%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2nd/</guid>
      <description>명제  명제 = 주어 + 술어
 1. 명제 판별법  사실명제 : 관찰, 측정, 실험 논리명제 : 수학, 논리학  2. 복합명제(compound proposition) 단순명제의 조합으로 이루어진 명제
추론(Reasoning)  참으로 알고 있는 명제로부터 새로운 참인 명제를 찾는 과정
  연역법 : p → q, p가 참이므로 q가 참 귀납법 : 개별적 사실을 말하는 명제로부터 일반적인 결론을 도출 성급한 일반화 : 몇 개의 사례나 경험으로 전체 또는 전체의 속성을 단정짓고 판단  부울  어떤 명제의 참과 거짓을 이진수에 대응시켜 명제와 명제간의 관계를 수학적으로 표현</description>
    </item>
    
    <item>
      <title>[JAVA]1일차</title>
      <link>https://ssabum.github.io/content/java1%EC%9D%BC%EC%B0%A8/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/java1%EC%9D%BC%EC%B0%A8/</guid>
      <description>1. 자바개발환경 설치 JDK는 java development kit의 줄임말로 개발하는데 필요한 라이브러리와 플랫폼이 포함

 byte code는 exe파일이 아니기 때문에 바로 실행이 불가능하므로 JVM이 필요 따라서 실행파일이 메모리에 로딩되고 운영체제 플랫폼에 맞게 리소스를 재컴파일 실행 어떤 운영체제에서 작동할지 모르기 때문에 JVM이 각 OS에 맞게 재컴파일을 통해 실행 가상머신에 따라 실행하므로 속도가 비교적 느리고 JVM이 필요하기 때문에 JRE(실행환경) 필요  // 출력문 public class TPC01 { public static void main(String[] args) { // syso + Ctrl + spaceBar 	System.</description>
    </item>
    
    <item>
      <title>가상환경</title>
      <link>https://ssabum.github.io/content/%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/</guid>
      <description>가상머신 정의💻 가상 머신(Virtual Machine, VM)은 컴퓨팅 환경을 소프트웨어로 구현한 것, 즉 컴퓨터를 에뮬레이션하는 소프트웨어다. 가상머신상에서 운영체제나 응용프로그램을 설치 및 실행할 수 있다.
시스템 가상 머신 시스템 가상 머신은 때로 하드웨어 가상 머신이라고 하며 각 운영 체제를 실행하는 가상 머신 사이의 기초가 되는 물리 컴퓨터를 다중화(multiplex)한다. 가상화를 제공하는 소프트웨어 계층은 가상 머신 모니터 또는 하이퍼바이저라고 한다. 하이퍼바이저는 순 그대로의 하드웨어 또는 호스트 운영 체제 위에서 실행할 수 있다.
시스템 가상 머신의 주요 이점</description>
    </item>
    
    <item>
      <title>SQL문법</title>
      <link>https://ssabum.github.io/content/sql%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/sql%EB%AC%B8%EB%B2%95/</guid>
      <description>SQL 개념  https://www.sqlitetutorial.net/
SQL(StructuredQueryLanguage)는 관계형 데이터베이스 관리시스템(RDBMS)의데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어이다.
 SQL 문법의 세가지 종류
 DDL - 데이터 정의 언어  CREATE DROP ALTER RENAME   DML - 데이터 조작 언어  INSERT UPDATE DELETE SELECT   DCL - 데이터 제어 언어  GRANT REVOKE COMMIT ROLLBACK    Database 생성  해당하는 데이터베이스 파일이 있으면 해당DB를 콘솔로 연다.
만약 해당하는 파일이 없으면 새로 생성하고, 해당 DB를 콘솔로 연다.</description>
    </item>
    
    <item>
      <title>CSS기초</title>
      <link>https://ssabum.github.io/content/css%EA%B8%B0%EC%B4%88/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/css%EA%B8%B0%EC%B4%88/</guid>
      <description>CSS  스타일, 레이아웃 등을 통해 HTML이 사용자에게 어떻게 표시 되는지를 지정하는 언어
사용자에게 문서(HTML)를 표시하는 방법을 지정하는 언어
 CSS 구문  구문은 선택자와 함께 열린다. 스타일을 지정할 html 요소를 선택. 다음 중괄호가 있는데 이 안에는 속성과 값 쌍 형태를 가지는 하나 또는 그 이상의 선언(declaration)이 있다. 각 쌍은 우리가 선택한 요소의 속성을 지정하고 속성에 부여할 값을 지정한다.  선언문
 속성 (Property)  사람이 읽을 수 있는 식별자로, 어떤 (글꼴, 너비, 배경색 등) 스타일 기능을 변경할지 나타냅니다.</description>
    </item>
    
    <item>
      <title>CSS기초 레이아웃</title>
      <link>https://ssabum.github.io/content/css%EA%B8%B0%EC%B4%88-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/css%EA%B8%B0%EC%B4%88-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/</guid>
      <description>CSS Layout  웹페이지에 포함되는 요소들을 어떻게 취합하고 그것들이 어느 위치에 놓일 것인지를 제어한다.
 float  한 요소(element)가 정상 흐름(normal flow)으로부터 빠져 텍스트 및 인라인(inline) 요소가 그 주위를 감싸 자기 컨테이너의 좌,우측을 따라 배치되어야 함을 지정한다.
 clearfix
  float 요소와 다른 텍스트가아닌 block 요소간의 레이아웃 깨짐을 막기 위해 다음과 같이 작성한다.
/* float 속성을 적용한 요소의 부모요소에 적용한다. */ /* 부모 태그 다음에 가상 요소(::after)로 내용이 빈(content:&amp;#34;&amp;#34;) 블럭(display: block;)을 만들고 */ /* 이 가상요소는 float left,right(both)를 초기화 한다는 뜻 */ .</description>
    </item>
    
    <item>
      <title>Django 기본</title>
      <link>https://ssabum.github.io/content/django-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/django-%EA%B8%B0%EB%B3%B8/</guid>
      <description>Django wep programming  파이썬으로 만들어진 무료 오픈소스 웹 애플리케이션 프레임워크
즉, 쉽고 빠르게 웹사이트를 개발할 수 있도록 돕는 구성요소로 이루어진 웹 프레임워크
여기서 프레임워크란, 애플리케이션 개발에 바탕이 되는 템플릿과 같은 역할을 하는 클래스들과 인터페이스의 집합
 기본 생성 파일  mysite: 프로젝트를 담는 공간 manage.py: 프로젝트와 다양한 방법으로 상호작용 하는 커맨드라인의 유틸리티 init.py: 파이썬으로 하여금 이 디렉토리를 패키지처럼 다루라고 알려주는 용도의 빈 파일 setting.py: 현재 프로젝트의 환경 및 구성을 저장 urls.</description>
    </item>
    
    <item>
      <title>HTML기초</title>
      <link>https://ssabum.github.io/content/html%EA%B8%B0%EC%B4%88/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/html%EA%B8%B0%EC%B4%88/</guid>
      <description>HTML  &amp;ldquo;웹 컨텐츠의 의미와 구조를 정의할 때 사용하는 언어&amp;rdquo;
 HTML 기초 Hyper
 텍스트 등의 정보가 동일 선상에 있는 것이 아니라 다중으로 연결되어 있는 상태  Hyper Text
 참조(하이퍼링크)를 통해 사용자가 한 문서에서 다른 문서로 즉시 접근 할 수 잇는 텍스트 하이퍼 텍스트가 쓰인 기술등 중 가장 중요한 2가지 (http, html)  Markup Language
 특정 텍스트에 역할을 부여하는, 따라서 &amp;ldquo;마크업을 한다&amp;rdquo; 라고 하는 건 제목이 제목이라하고 본문이 본문이라고 마킹을 하는 것 ex) h1 tag는 단순히 글자가 커지는 것이 아니라 의미론적으로 그 페이지에서 가장 핵심 주제를 의미하는 것  HTML 기본 구조 DOM</description>
    </item>
    
    <item>
      <title>OOP</title>
      <link>https://ssabum.github.io/content/oop/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/oop/</guid>
      <description>&lt;p&gt;&lt;code&gt;Object-Oriented Programming&lt;/code&gt;의 약자로 &lt;code&gt;객체지향프로그래밍&lt;/code&gt;이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>알고리즘 기초이론</title>
      <link>https://ssabum.github.io/content/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ssabum.github.io/content/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/</guid>
      <description>&lt;p&gt;Algorithm기본 이론에 대해 알아보자&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
