<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Ssabum&#39;s Devlog</title>
        <link>https://ssabum.github.io/</link>
        <description>Recent content on Ssabum&#39;s Devlog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 05 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ssabum.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>백준 1003번 피보나치 함수</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1003%EB%B2%88-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%ED%95%A8%EC%88%98/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1003%EB%B2%88-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%ED%95%A8%EC%88%98/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1003%EB%B2%88-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%ED%95%A8%EC%88%98/boj.png" alt="Featured image of post 백준 1003번 피보나치 함수" /&gt;&lt;h1 id=&#34;1003번_피보나치-함수&#34;&gt;1003번_피보나치 함수&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1003&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-설계&#34;&gt;🅰 설계&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# fib(0), fib(1), tmp 설정&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;zero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 피보나치 수행&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zero&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;zero&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 출력&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;one&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;p&gt;// 풀이과정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;처음 문제를 읽고 어떻게 해야할지 풀이가 떠오르지 않아 꽤나 고생했다.😥&lt;/li&gt;
&lt;li&gt;하지만 &lt;code&gt;5&lt;/code&gt;까지의 경우의 수를 직접 표로 그려보니 간단한 문제임을 알 수 있었다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fib(0)&lt;/code&gt;, &lt;code&gt;fib(1)&lt;/code&gt;의 카운트를 담을 변수를 생성하고 &lt;code&gt;n&lt;/code&gt;이 커질수록 증가하는 규칙을 찾아서 코드로 옮겨주기만 하면 되는 문제였다.👍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;// 앞으로 다짐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;문제 풀이가 떠오르지 않을 땐 무조건 노트에 그려보자!!!&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>백준 1012번 유기농 배추</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1012%EB%B2%88-%EC%9C%A0%EA%B8%B0%EB%86%8D-%EB%B0%B0%EC%B6%94/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1012%EB%B2%88-%EC%9C%A0%EA%B8%B0%EB%86%8D-%EB%B0%B0%EC%B6%94/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1012%EB%B2%88-%EC%9C%A0%EA%B8%B0%EB%86%8D-%EB%B0%B0%EC%B6%94/boj.png" alt="Featured image of post 백준 1012번 유기농 배추" /&gt;&lt;h1 id=&#34;1012번_유기농-배추&#34;&gt;1012번_유기농 배추&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1012&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-설계&#34;&gt;🅰 설계&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;input.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tc&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# m: 가로길이, n: 세로길이, k: 배추개수&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 입력된 데이터에 맞춰 밭 만들어 주기&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 밭에 배추 심기&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 지렁이 검사&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    
&lt;span class=&#34;c1&#34;&gt;# 이후 접근을 어떻게 해야할지...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-모범답안&#34;&gt;🅰 모범답안&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;del&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;데이터를 받아오고 기본 &lt;code&gt;base&lt;/code&gt;에 넣어주는 부분까지는 구현했지만 &lt;code&gt;bfs&lt;/code&gt;를 돌면서 탐색하는 것이 아직 익숙치 않아 한참을 노트와 키보드만 끄적거리고 두들기다가 문제를 해결하지 못했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이후 검색을 통해 풀이방법을 알 수 있었고 보다 많음 &lt;code&gt;bfs&lt;/code&gt;, &lt;code&gt;dfs&lt;/code&gt; 문제를 풀어보면서 숙달해야겠다고 느꼈다.😨&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>백준 1074번 Z</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1074%EB%B2%88-z/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1074%EB%B2%88-z/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1074%EB%B2%88-z/boj.png" alt="Featured image of post 백준 1074번 Z" /&gt;&lt;h1 id=&#34;1074번_z&#34;&gt;1074번_Z&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1074&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-설계&#34;&gt;🅰 설계&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 기본이 되는 탈출 조건 생성&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 처음에 시간초과 떠서 경우의 수도 합쳐 주었다.&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 하지만 나중에 알고보니 할 필요 없었다...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 재귀함수&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 시간초과 안나기 위해 sys.stdin.readline사용...sibal...&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;p&gt;// 풀이과정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문제에 주어진 그림을 보면서 이해를 쉽게 할 수 있었다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다만 요건은 &lt;code&gt;시간초과&lt;/code&gt;였다.&lt;/p&gt;
&lt;p&gt;시간초과를 없애기 위해 &lt;code&gt;if&lt;/code&gt;문을 합쳐 보면서 어떻게든 줄여보려 했지만 결과는 &lt;code&gt;시관초과&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이후 검색을 통해 &lt;code&gt;sys.stdin.readline()&lt;/code&gt;에 대해 알게 되었고 이를 이용해 해결 할 수 있었다.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://velog.io/@yeseolee/Python-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%9E%85%EB%A0%A5-%EC%A0%95%EB%A6%ACsys.stdin.readline&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;sys.stdin.readline사용법&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>백준 1107번 리모컨</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/boj.png" alt="Featured image of post 백준 1107번 리모컨" /&gt;&lt;h1 id=&#34;1107번_리모컨&#34;&gt;1107번_리모컨&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1107&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-코드&#34;&gt;🅰 코드&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# N: 목표로 하는 채널번호(0~500000), M: 고장난 버튼의 개수(0~10)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# button: 숫자 버튼 / 고장난 버튼이 있으면 빼준다&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 100번에서 N번으로 +, - 버튼만 쓴 경우&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 50만 채널인데 최악의 경우를 고려할 때&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 작은수에서 +만 사용(50만)에 큰수에서 -만 사용(50만)을 더하면 100만 가지의 경우의 수가 발생&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;False&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# button으로 접근 할 수 있는 수에다가 목표 채널의 차이(+, - 으로 이동)를 더한 값&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-연산자-사용&#34;&gt;🅰 &amp;amp;연산자 사용&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;err&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1107&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;](&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;../../../../../../../../&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;qqq96&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Desktop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1107.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PNG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ba&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;le&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;le&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;abs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;문제를 보는 순간 별 생각 없이 &lt;code&gt;brute force&lt;/code&gt;로 풀면 되겠지라는 생각을 가지고 문제에 주어진 대로 최대 채널 수 만큼 &lt;code&gt;500000&lt;/code&gt;까지로 설계해 주었다. 그러나 &lt;code&gt;맞았습니다!!&lt;/code&gt;라는 문구는 보이지 않았고 고민 끝에 &lt;code&gt;1000000&lt;/code&gt;으로 설계해줘야 한다는 사실을 깨달았다!!&lt;/li&gt;
&lt;li&gt;우여곡절 끝에 문제를 해결하고 다른 사람들은 어떻게 풀었는지 살펴보는 와중 &lt;code&gt;&amp;amp;&lt;/code&gt;연산자를 이용해 비교적 짧게 구현된 코드를 발견하게 되었다. 결과가 어떻게 나올지 궁금하여 두개를 돌려보았는데 다음과 같이 나왔다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 418; flex-basis: 1005px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/1107.PNG&#34; data-size=&#34;951x227&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/1107.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/1107_huc8de5019e3e02d226847afcf34433cf6_28316_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1107%EB%B2%88-%EB%A6%AC%EB%AA%A8%EC%BB%A8/1107_huc8de5019e3e02d226847afcf34433cf6_28316_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;951&#34;
				height=&#34;227&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;산술연산자&lt;/code&gt;와 &lt;code&gt;비트연산자&lt;/code&gt;에서는 &lt;code&gt;비트연산자&lt;/code&gt;의 속도가 월등히 빠른 걸로 알고 있는데 이 경우에서는 반대의 결과가 나와서 신기했다. 물론 난 아직 이런 연산자를 쓰는 것이 익숙치 못해 이해도 어렵지만, 나중에는 자유롭게 구사하는 날이 오기를&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>백준 1260번 DFS와 BFS</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1260%EB%B2%88-dfs%EC%99%80-bfs/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1260%EB%B2%88-dfs%EC%99%80-bfs/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1260%EB%B2%88-dfs%EC%99%80-bfs/boj.png" alt="Featured image of post 백준 1260번 DFS와 BFS" /&gt;&lt;h1 id=&#34;1260번_dfs와-bfs&#34;&gt;1260번_DFS와 BFS&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1260&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-코드&#34;&gt;🅰 코드&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;visit_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;문제 자체는 &lt;code&gt;SSAFY&lt;/code&gt;교육에도 진행되었던 &lt;code&gt;DFS&lt;/code&gt;, &lt;code&gt;BFS&lt;/code&gt;의 가장 기본인 코드를 구현하는 것이었다. 그렇기에 어렵지는 않았지만, 궁극적인 목표는 어떤 문제에는 어떤 알고리즘으로 구현하는 것이 더 어울리는지 문제를 보고 바로 아는 것인것 같다. 그러므로 더욱 노력해야 할것 같다;;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>백준 1389번 케빈 베이컨의 6단계 법칙</title>
        <link>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1389%EB%B2%88-%EC%BC%80%EB%B9%88-%EB%B2%A0%EC%9D%B4%EC%BB%A8%EC%9D%98-6%EB%8B%A8%EA%B3%84-%EB%B2%95%EC%B9%99/</link>
        <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1389%EB%B2%88-%EC%BC%80%EB%B9%88-%EB%B2%A0%EC%9D%B4%EC%BB%A8%EC%9D%98-6%EB%8B%A8%EA%B3%84-%EB%B2%95%EC%B9%99/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EB%B0%B1%EC%A4%80-1389%EB%B2%88-%EC%BC%80%EB%B9%88-%EB%B2%A0%EC%9D%B4%EC%BB%A8%EC%9D%98-6%EB%8B%A8%EA%B3%84-%EB%B2%95%EC%B9%99/boj.png" alt="Featured image of post 백준 1389번 케빈 베이컨의 6단계 법칙" /&gt;&lt;h1 id=&#34;1389번_케빈-베이컨의-6단계-법칙&#34;&gt;1389번_케빈 베이컨의 6단계 법칙&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.acmicpc.net/problem/1389&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;문제 보러가기&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;-코드&#34;&gt;🅰 코드&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deque&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 기본 base setting&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bacon&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deque&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# queue에서 popleft사용&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;popleft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;relation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;bacon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bacon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;visited&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bacon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# n: 유저수(2~100), m: 관계수(1~5000)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 관계 dict생성 후 입력&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;relation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;relation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;relation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# index로 최소 관계를 구하고 관계이기 때문에 1을 더해준다&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-후기&#34;&gt;✅ 후기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BFS&lt;/code&gt;를 이용하여 풀어내는 문제였다. 알고리즘 문제를 풀때마다 느끼는 거지만, 알고리즘 이해 자체는 어렵지 않지만 그것을 이용하여 문제를 풀어내는 것은 굉장히 어려운 것 같다;;&lt;/li&gt;
&lt;li&gt;여담이지만 &lt;code&gt;케빈 베이컨&lt;/code&gt;처럼 야리꾸리한 문제를 만들어서 자기이름을 붙이는 작자들은 도대체 어떤 사람들인지 궁금하다&amp;hellip;🥴&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>SQL문법</title>
        <link>https://ssabum.github.io/p/sql%EB%AC%B8%EB%B2%95/</link>
        <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/sql%EB%AC%B8%EB%B2%95/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/sql%EB%AC%B8%EB%B2%95/sql.png" alt="Featured image of post SQL문법" /&gt;&lt;h2 id=&#34;sql-개념&#34;&gt;SQL 개념&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sqlitetutorial.net/&#34;&gt;https://www.sqlitetutorial.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQL(StructuredQueryLanguage)는 관계형 데이터베이스 관리시스템(RDBMS)의데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어이다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;SQL 문법의 세가지 종류&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDL - 데이터 정의 언어
&lt;ul&gt;
&lt;li&gt;CREATE&lt;/li&gt;
&lt;li&gt;DROP&lt;/li&gt;
&lt;li&gt;ALTER&lt;/li&gt;
&lt;li&gt;RENAME&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DML - 데이터 조작 언어
&lt;ul&gt;
&lt;li&gt;INSERT&lt;/li&gt;
&lt;li&gt;UPDATE&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;li&gt;SELECT&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DCL - 데이터 제어 언어
&lt;ul&gt;
&lt;li&gt;GRANT&lt;/li&gt;
&lt;li&gt;REVOKE&lt;/li&gt;
&lt;li&gt;COMMIT&lt;/li&gt;
&lt;li&gt;ROLLBACK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;database-생성&#34;&gt;Database 생성&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;해당하는 데이터베이스 파일이 있으면 해당DB를 콘솔로 연다.&lt;/p&gt;
&lt;p&gt;만약 해당하는 파일이 없으면 새로 생성하고, 해당 DB를 콘솔로 연다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sqlite3&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sqlite3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tutorial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sqlite3&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;-- 1. 콘솔로 DB를 열고,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;databases&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;-- 2.데이터베이스 목록을 확인한다.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;CSV 파일 불러오는 명령어&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;주의사항)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt;으로 시작하는 모든 명령어는 sqlite3 프로그램의 기능을 실행하는 명령어이며, SQL 문법에 속하지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;파일명&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;테이블명&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csv&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users_user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;테이블-생성-및-삭제&#34;&gt;테이블 생성 및 삭제&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;데이터 타입의 종류는 INTEGER, TEXT, REAL, NUMERIC, BLOB 등이 존재한다.&lt;/p&gt;
&lt;p&gt;자세한 내용은 &lt;a class=&#34;link&#34; href=&#34;https://sqlite.org/datatype3.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SQLite3 공식문서&lt;/a&gt;를 참조한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;테이블 생성 (CREATE)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datatype&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datatype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INTEGER PRIMARY KEY&lt;/code&gt; 타입으로 컬럼 생성시 기본 &lt;code&gt;rowid&lt;/code&gt; 를 대체함&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;단, PRIMARY KEY는 INTEGER 타입에서만 사용가능&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;데이터 타입&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NULL / INTEGER / REAL / TEXT / BLOB&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;INT&lt;/code&gt;와 &lt;code&gt;INTEGER&lt;/code&gt;의 차이&lt;/p&gt;
&lt;p&gt;&lt;code&gt;INT&lt;/code&gt;형은 산술연산이 가능하며 &lt;code&gt;NULL&lt;/code&gt;로 초기화가 불가능하다&lt;/p&gt;
&lt;p&gt;&lt;code&gt;INTEGER&lt;/code&gt;형은 산술연산이 불가능하며 &lt;code&gt;NULL&lt;/code&gt;로 초기화가 가능하다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;테이블 생성 with NOT NULL 조건 예시&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AUTOINCREMENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;TEXT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;INT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;AUTOINCREMENT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이전의 삭제된 데이터의 pk는 재사용하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;테이블 및 스키마 조회&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;-- 테이블 목록 조회
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;schema&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;-- 특정 테이블 스키마 조회
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;테이블 제거 (DROP)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;classmates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sqlite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;-- 테이블 제거 확인
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;데이터-추가-읽기-수정-및-삭제&#34;&gt;데이터 추가, 읽기, 수정 및 삭제&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;추가 (INSERT)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;id 스키마를 직접 작성 했을 때 데이터 추가 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;모든 컬럼 작성 시&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컬럼 미작성 시에는 직접 id 값 입력&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;조회 (SELECT)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL은 세미콜론(;)을 만나기 전까지 절대 실행되지 않습니다.&lt;/p&gt;
&lt;p&gt;따라서 아래 LIMIT 예시와 같이 들여쓰기를 비교적 자유롭게 할 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 모든 컬럼 가져오기 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- 특정 컬럼 가져오기 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- LIMIT: 원하는 개수(num)만큼 가져오기 -- 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- OFFSET: 특정 위치에서부터 가져올 때 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- (맨 위부터 num만큼 떨어진 값부터 가져온다는 의미)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;OFFSET&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- WHERE: 조건을 통해 값 가져오기 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- DISTINCT: 중복없이 가져오기 -- 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DISTINCT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;삭제 (DELETE)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- ex)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;classmates&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;지연&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;수정 (UPDATE)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- ex)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- 지연의 이름을 지수로 바꾼다고 하면 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;classmates&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;지수&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;대한민국&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;지연&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;예시와 함께하는 WHERE문 심화 (READ)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Q.users에서 age가 30이상인 사람만 가져온다면? --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Q.users에서 age가 30이상인 사람의 이름만 가져온다면? --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Q.users에서 age가 30이상이고 성이 김인 사람의 성과 나이만 가져온다면? --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_name&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;김&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;심화-sql문&#34;&gt;심화 SQL문&lt;/h2&gt;
&lt;h3 id=&#34;expressions&#34;&gt;Expressions&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;django ORM에서 &lt;code&gt;aggregate&lt;/code&gt;와 대응&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;COUNT (레코드 값들의 개수 반환)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AVG (레코드 값들의 평균값 반환)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AVG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MAX (레코드 값들의 최대값 반환)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MIN (레코드 값들의 최소값 반환)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SUM (레코드 값들의 합 반환)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;like&#34;&gt;LIKE&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;LIKE는 두 가지 와일드 카드(언더스코어 그리고 퍼센트 기호)와 함께 동작한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;_&lt;/code&gt; (반드시 이 자리에 한 개의 문자가 존재해야 한다는 뜻)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 20대인 사람들만 가져올 때 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;2_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%&lt;/code&gt; (이 자리에 문자열이 있을 수도, 없을 수도 있다. 0개 이상이라는 뜻)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 지역번호가 02인 사람만 가져올 때 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;02-%&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;두 개를 조합해서 사용할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 핸드폰 중간 번호가 반드시 4자리면서 511로 시작되는 사람들 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%-511_-%&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;정렬 (ORDER BY)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ASC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- ASC: 오름차순 / DESC: 내림차순 --
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 나이, 성 순서로 오름차순 정렬하여 상위 10개만 뽑아보면? --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_name&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;LIMIT&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;GROUP BY&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;지정된 기준에 따라 행 세트를 그룹으로 결합한다.&lt;/p&gt;
&lt;p&gt;데이터를 요약하는 상황에서 주로 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;django ORM에서 &lt;code&gt;annotate&lt;/code&gt;와 대응&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aggregate_function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;column_2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;table&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;column2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- 성(last_name)씨가 몇 명인지 조회할 때 --
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;GROUP&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;ALTER&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;테이블명 변경&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;기존테이블명&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;RENAME&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TO&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;새로운테이블명&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;새로운 컬럼 추가&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;ALTER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;테이블명&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;ADD&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;COLUMN&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;컬럼명&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datatype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>외장SSD</title>
        <link>https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/</link>
        <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/ssd.jpg" alt="Featured image of post 외장SSD" /&gt;&lt;h1 id=&#34;외장ssd&#34;&gt;외장SSD?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;외장하드, 즉 &lt;code&gt;외장HDD&lt;/code&gt;는 많이들 들어보았을 것이다. &lt;code&gt;외장SSD&lt;/code&gt;는 &lt;code&gt;HDD&lt;/code&gt; 대신 &lt;code&gt;SSD&lt;/code&gt;를 사용하여 만들어낸 외장 메모리 저장장치이다.  &lt;code&gt;SSD&lt;/code&gt;는 &lt;code&gt;HDD&lt;/code&gt;와 비교해 데이터 전송 속도가 빠르고, 전력 소모가 적으며, 플래터, 모터, 헤드 같은 부품이 없기 때문에 더 작고 얇게 제작할 수 있다.&lt;/p&gt;
&lt;p&gt;따라서 &lt;code&gt;외장SSD&lt;/code&gt; 역시 단일 저장장치에서도 &lt;code&gt;HDD&lt;/code&gt; 수준의 저장 용량을 확보할 수 있게 됐고, 입출력 인터페이스 역시 &lt;code&gt;SSD&lt;/code&gt;의 빠른 속도를 선보이면서 휴대용 저장장치에 어울리는 방식으로 자리잡았다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;외장SSD&lt;/code&gt;의 가장 큰 장점은 전송 속도다. &lt;code&gt;HDD&lt;/code&gt;는 바늘 처럼 생긴 헤드를 플래터 위에서 직접 움직이며 데이터를 찾거나 데이터를 기록하는 반면, 반도체로 제작한 &lt;code&gt;SSD&lt;/code&gt;는 이러한 과정이 없는 만큼 더 빠르게 데이터를 읽고 쓸 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;그래서-나도&#34;&gt;그래서 나도!&lt;/h2&gt;
&lt;p&gt;내 노트북의 용량은 &lt;code&gt;SSD256GB&lt;/code&gt;이다. 그러나 필수 소프트웨어가 깔리고 프로그램과 파일들 몇 개 깔다보니 금방 금방 줄어들었다&amp;hellip;&lt;/p&gt;
&lt;p&gt;그래서 고민끝에 구매하게된 삼성 포터블 &lt;code&gt;외장SSD T5&lt;/code&gt; ㅎㅎ 통장 잔고가 좋지 못해 500GB짜리를 샀지만 나름 &lt;code&gt;FLEX&lt;/code&gt;했다.&lt;/p&gt;
&lt;p&gt;그렇게 구매하고 배송받은 &lt;code&gt;외장SSD&lt;/code&gt;를 연결하는 순간&amp;hellip;&lt;code&gt;C tpye&lt;/code&gt; 연결시에 접촉 불량이 발생했다&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 133; flex-basis: 320px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/broken.jpg&#34; data-size=&#34;500x375&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/broken.jpg&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/broken_hufc6be62723d340c8edb0fb8f5b75736e_38473_480x0_resize_q75_box.jpg 480w, https://ssabum.github.io/p/%EC%99%B8%EC%9E%A5ssd/broken_hufc6be62723d340c8edb0fb8f5b75736e_38473_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;500&#34;
				height=&#34;375&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;바로 삼성서비스센터에 무상교체를 보낸 상태이다&amp;hellip;&lt;/p&gt;
&lt;p&gt;빨리 정상작동되는 새걸로 받아서 가득 채워버려야지&amp;hellip;🤪&lt;/p&gt;
&lt;p&gt;그때부터 &lt;code&gt;Data-analysis&lt;/code&gt; 포스팅 시작이다!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CSS기초</title>
        <link>https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88/css.png" alt="Featured image of post CSS기초" /&gt;&lt;h1 id=&#34;css&#34;&gt;CSS&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;스타일, 레이아웃 등을 통해 HTML이 사용자에게 어떻게 표시 되는지를 지정하는 언어&lt;/p&gt;
&lt;p&gt;사용자에게 문서(HTML)를 표시하는 방법을 지정하는 언어&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;css-구문&#34;&gt;CSS 구문&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구문은 선택자와 함께 열린다.&lt;/li&gt;
&lt;li&gt;스타일을 지정할 html 요소를 선택.&lt;/li&gt;
&lt;li&gt;다음 중괄호가 있는데 이 안에는 속성과 값 쌍 형태를 가지는 하나 또는 그 이상의 선언(declaration)이 있다.&lt;/li&gt;
&lt;li&gt;각 쌍은 우리가 선택한 요소의 속성을 지정하고 속성에 부여할 값을 지정한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;선언문&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;속성 (Property)
&lt;ul&gt;
&lt;li&gt;사람이 읽을 수 있는 식별자로, 어떤 (글꼴, 너비, 배경색 등) 스타일 기능을 변경할지 나타냅니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;값 (Value)
&lt;ul&gt;
&lt;li&gt;각 속성에는 값을 부여한다.&lt;/li&gt;
&lt;li&gt;값은 어떻게 (글꼴을 이걸로, 배경 색을 저걸로 등)스타일 기능을 변경할 건지 나타낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;CSS 정의 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Inline style&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;내부 참조 (&lt;code&gt;Embedding style&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;외부 참조 (&lt;code&gt;Link style&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;css-selector&#34;&gt;CSS Selector&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;선택자는 스타일을 지정할 웹 페이지의 HTML 요소를 대상으로 하는 데 사용&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;클래스(class) 선택자&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클래스 선택자는 마침표( .) 문자로 시작 하며 해당 클래스가 적용된 문서의 모든 항목을 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;아이디(id) 선택자&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;아이디 선택자는 &lt;code&gt;#&lt;/code&gt; 문자로 시작하며 기본적으로 클래스 선택자와 같은 방식으로 사용&lt;/li&gt;
&lt;li&gt;그러나 아이디는 문서 당 한 번만 사용할 수 있으며 요소에는 단일 id값만 적용 할 수 있다&lt;/li&gt;
&lt;li&gt;문서에서 동일한 아이디를 여러 번 사용해도 동작하나 그렇게 하면 안된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;결합자&lt;/strong&gt;(combinators)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자손 결합자
&lt;ul&gt;
&lt;li&gt;셀렉터A  &lt;code&gt; &lt;/code&gt;(공백) 셀렉터B&lt;/li&gt;
&lt;li&gt;셀렉터A의 모든 후손 요소(level n) 중 셀렉터B와 일치하는 요소 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;자식 결합자
&lt;ul&gt;
&lt;li&gt;셀렉터A &lt;code&gt;&amp;gt;&lt;/code&gt; 셀렉터B&lt;/li&gt;
&lt;li&gt;셀렉터A의 모든 자식 요소(level 1) 중 셀렉터B와 일치하는 요소 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;일반 형제 결합자
&lt;ul&gt;
&lt;li&gt;셀렉터A &lt;code&gt;~&lt;/code&gt; 셀렉터B&lt;/li&gt;
&lt;li&gt;셀렉터A의 형제 요소 중 셀렉터A 뒤에 위치하는 셀렉터B 요소를 모두 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;인접 형제 결합자
&lt;ul&gt;
&lt;li&gt;셀렉터A &lt;code&gt;+&lt;/code&gt; 셀렉터B&lt;/li&gt;
&lt;li&gt;셀렉터A의 형제 요소 중 셀렉터A 바로 뒤에 위치하는 셀렉터B 요소를 선택&lt;/li&gt;
&lt;li&gt;단, A와 B 사이에 다른 요소가 존재하면 선택되지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;적용 우선순위&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;!important&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;다른 사람들의 코드에서 발견할 때 그 의미를 알 수 있는 것은 좋다.&lt;/li&gt;
&lt;li&gt;하지만 반드시 필요한 경우가 아니면 절대 사용하지 않는 것이 좋다.,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!important&lt;/code&gt; 는 cascading이 정상적으로 작동하는 방식을 변경하므로, CSS 스타일 문제를 해결하기가 어렵습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;inline style&lt;/li&gt;
&lt;li&gt;id 선택자
&lt;ul&gt;
&lt;li&gt;id는 대부분의 다른 선택자보다 우선순위가 높기 때문에 다루기가 어려워 질 수 있다.&lt;/li&gt;
&lt;li&gt;대부분의 경우 id 보다는 모두  class 선택자로 작성하는 것이 좋다.&lt;/li&gt;
&lt;li&gt;만약 문서 내 &lt;code&gt;링크 이동&lt;/code&gt;이나 &lt;code&gt;for&lt;/code&gt;를 사용하는 특별한 경우에만 아이디를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;class 선택자&lt;/li&gt;
&lt;li&gt;요소 선택자&lt;/li&gt;
&lt;li&gt;소스 순서&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;css-단위&#34;&gt;CSS 단위&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;(상대) 크기 단위&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;px&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모니터 해상도의 한 화소인 &amp;lsquo;픽셀&amp;rsquo;을 기준&lt;/li&gt;
&lt;li&gt;픽셀의 크기는 변하지 않기 때문에 고정적인 단위&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;%&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;백분율 단위&lt;/li&gt;
&lt;li&gt;가변적인 레이아웃에서 자주 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;em&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;em은 상속의 영향 받음, rem은 최상위 요소(html)를 기준으로 결정됨.&lt;/li&gt;
&lt;li&gt;상황에 따라 각기 다른 값을 가질 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;rem&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최상위 요소인 html(root em)을  절대 단위를 기준으로 삼음. 상속의 영향을 받지 않음.&lt;/li&gt;
&lt;li&gt;상속에 영향을 받지 않기 때문에 대부분의 경우 &lt;code&gt;rem&lt;/code&gt; 을 많이 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;viewport&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(스크롤을 내리지 않은 상태에서) 웹 페이지를 방문한 유저에게 현재 보이는 웹 컨텐츠의 영역&lt;/li&gt;
&lt;li&gt;viewport를 기준으로한 상대적인 사이즈&lt;/li&gt;
&lt;li&gt;주로 스마트폰이나 테블릿 디바이스의 화면을 일컫는 용어로 사용된다.&lt;/li&gt;
&lt;li&gt;vw, vh&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;색상 표현 단위&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;색상 키워드
&lt;ul&gt;
&lt;li&gt;색상 키워드는 대소문자를 구분하지 않는 식별자로, red, blue, black처럼 특정 색을 나타낸다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RGB 색상
&lt;ul&gt;
&lt;li&gt;빨강, 초록, 파랑을 통해 특정 색을 표현&lt;/li&gt;
&lt;li&gt;16진수 표기법이나 함수형 표기법으로 사용&lt;/li&gt;
&lt;li&gt;a는 alpha(투명도)가 추가된 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HSL 색상
&lt;ul&gt;
&lt;li&gt;색상, 채도, 명도를 통해 특정 색상을 표현&lt;/li&gt;
&lt;li&gt;a는 alpha(투명도)가 추가된 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;box-model&#34;&gt;Box Model&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;웹 디자인은 contents를 담을 box model을 정의하고 CSS 속성을 통해 스타일(배경, 폰트와 텍스트 등)과 위치 및 정렬을 지정하는 것.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;모든 HTML 요소는 box 형태로 되어있다.&lt;/li&gt;
&lt;li&gt;하나의 박스는 네 부분(영역)으로 이루어 진다.
&lt;ul&gt;
&lt;li&gt;content / padding / border / margin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ol&gt;
&lt;li&gt;Content
&lt;ul&gt;
&lt;li&gt;글이나 이미지, 비디오 등 요소의 실제 내용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Padding (안쪽 여백)
&lt;ul&gt;
&lt;li&gt;Border(테두리) 안쪽의 내부 여백&lt;/li&gt;
&lt;li&gt;배경색, 이미지 지정 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Border&lt;/li&gt;
&lt;li&gt;Margin (바깥쪽 여백)
&lt;ul&gt;
&lt;li&gt;테두리 바깥의 외부 여백&lt;/li&gt;
&lt;li&gt;배경색 지정 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;마진 상쇄&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;block의 top 및 bottom margin이 때로는 (결합되는 마진 중 크기가) 가장 큰 한 마진으로 결합(combine, 상쇄(collapsed))된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;display&#34;&gt;Display&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;display CSS 속성은 요소를 블록과 인라인 요소 중 어느 쪽으로 처리할지와 함께 자식 요소를 배치할 때 사용할 레이아웃을 설정한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;block&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;쌓이는 박스&lt;/li&gt;
&lt;li&gt;요소는 블록 요소 상자를 생성하여 일반 흐름에서 요소 앞뒤에 줄 바꿈을 생성한다.&lt;/li&gt;
&lt;li&gt;블록 레벨 요소안에 인라인 레벨 요소가 들어갈 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;inline&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;줄바꿈이 일어나지 않는 행의 일부 요소&lt;/li&gt;
&lt;li&gt;content 너비만큼 가로 폭을 차지&lt;/li&gt;
&lt;li&gt;width, height, margin-top, margin-bottom을 지정할 수 없음&lt;/li&gt;
&lt;li&gt;상하 여백은 line-height로 지정&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;inline-block&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline 처럼 텍스트 흐름대로 나열, block처럼 박스 형태이기 block 속성 사용가능&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;none&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;해당 요소를 화면에서 사라지게 하며 요소의 공간조차 사라지게 한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visibility: hidden;&lt;/code&gt;은 해당 요소를 화면에서 사라지게는 하나 공간은 사라지지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;position&#34;&gt;Position&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;박스의 위치 속성 &amp;amp; 값&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;position
&lt;ul&gt;
&lt;li&gt;static / absolute / relative / fixed&lt;/li&gt;
&lt;li&gt;z-index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;기본 개념&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;static (기본 위치)
&lt;ul&gt;
&lt;li&gt;모든 태그의 기본&lt;/li&gt;
&lt;li&gt;태그의 default 값&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;relative (상대 위치)
&lt;ul&gt;
&lt;li&gt;기본 위치(static)를 기준으로 좌표 속성을 사용해 위치 이동&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;absolute (절대 위치)
&lt;ul&gt;
&lt;li&gt;static 이 아닌 부모/조상 요소를 기준으로 좌표 속성 만큼 이동&lt;/li&gt;
&lt;li&gt;부모 요소를 찾아가고 나아가 없다면 body에 붙는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fixed (고정 위치)
&lt;ul&gt;
&lt;li&gt;부모/조상 요소와 관계없이 브라우저의 viewport를 기준으로 좌표 속성 만큼 이동&lt;/li&gt;
&lt;li&gt;스크롤을 내리거나 올려도 화면에서 사라지지 않고 항상 같은 곳에 위치&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;absolute&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;absolute&lt;/code&gt;는 원래 위치해 있었던 과거 위치에 있던 공간은 더 이상 존재하지 않는다는 점이 특징이다.&lt;/li&gt;
&lt;li&gt;즉, 다른 모든 것과는 별개로 독자적인 곳에 놓이게 된다.&lt;/li&gt;
&lt;li&gt;대체 언제 쓸까?
&lt;ul&gt;
&lt;li&gt;페이지의 다른 요소의 위치와 간섭하지 않는 격리된 사용자 인터페이스 기능을 만들 수 있다.&lt;/li&gt;
&lt;li&gt;팝업 정보 상자 및 제어 메뉴, 롤오버 패널, 페이지 어느 곳에서나 끌어서 놓기할 수 있는 유저 인터페이스 페이지 등&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고문헌&#34;&gt;참고문헌&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance&#34;&gt;https://developer.mozilla.org/ko/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/CSS/inheritance&#34;&gt;https://developer.mozilla.org/ko/docs/Web/CSS/inheritance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/HTML/Block-level_elements&#34;&gt;https://developer.mozilla.org/ko/docs/Web/HTML/Block-level_elements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/HTML/Inline_elements&#34;&gt;https://developer.mozilla.org/ko/docs/Web/HTML/Inline_elements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/CSS/display&#34;&gt;https://developer.mozilla.org/ko/docs/Web/CSS/display&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.emmet.io/cheat-sheet/&#34;&gt;https://docs.emmet.io/cheat-sheet/&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CSS기초 레이아웃</title>
        <link>https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/css%EA%B8%B0%EC%B4%88-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83/css.png" alt="Featured image of post CSS기초 레이아웃" /&gt;&lt;h1 id=&#34;css-layout&#34;&gt;CSS Layout&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;웹페이지에 포함되는 요소들을 어떻게 취합하고 그것들이 어느 위치에 놓일 것인지를 제어한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;float&#34;&gt;float&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;한 요소(element)가 정상 흐름(normal flow)으로부터 빠져 텍스트 및 인라인(inline) 요소가 그 주위를 감싸 자기 컨테이너의 좌,우측을 따라 배치되어야 함을 지정한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;clearfix&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;float 요소와 다른 텍스트가아닌 block 요소간의 레이아웃 깨짐을 막기 위해 다음과 같이 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;c&#34;&gt;/* float 속성을 적용한 요소의 부모요소에 적용한다. */&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;/* 부모 태그 다음에 가상 요소(::after)로 내용이 빈(content:&amp;#34;&amp;#34;) 블럭(display: block;)을 만들고 */&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;/* 이 가상요소는 float left,right(both)를 초기화 한다는 뜻 */&lt;/span&gt;
  
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;clearfix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;after&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;both&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;정리&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flexbox 및 그리드 레이아웃과 같은 기술이 나오기 이전에 float는 열 레이아웃을 만드는데 사용되었다.&lt;/li&gt;
&lt;li&gt;mdn에서는 더 새롭고 나은 레이아웃 기술이 나와있으므로 레거시 레이아웃 기술로 분류해놓기도 했다.&lt;/li&gt;
&lt;li&gt;결국 원래 텍스트 블록 내에서 float 이미지를 위한 역할로 돌아간 것이다.&lt;/li&gt;
&lt;li&gt;여전히 사용하는 경우도 있다. (ex. naver nav bar)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;flexbox&#34;&gt;flexbox&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;일명 flexbox라 불리는 Flexible Box module은 flexbox 인터페이스 내의 아이템 간 공간 배분과 강력한 정렬 기능을 제공하기 위한 1차원 레이아웃 모델로 설계되었다.&lt;/p&gt;
&lt;p&gt;웹페이지의 컨테이너에 아이템의 폭과 높이 또는 순서를 변경해서 웹페이지의 사용 가능한 공간을 최대한 채우고 이를 디바이스 종류에 따라 유연하게 반영하도록 하는 개념&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;핵심 개념&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;요소
&lt;ul&gt;
&lt;li&gt;flex container&lt;/li&gt;
&lt;li&gt;flex items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;축
&lt;ul&gt;
&lt;li&gt;maix axis (주축)&lt;/li&gt;
&lt;li&gt;cros axis (교차축)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;flex container&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flexbox 레이아웃을 형성하는 가장 기본적인 모델&lt;/li&gt;
&lt;li&gt;flexbox가 놓여있는 영역&lt;/li&gt;
&lt;li&gt;flex 컨테이너를 생성하려면 영역 내의 컨테이너 요소의 display 값을 flex 혹은 inline-flex로 지정&lt;/li&gt;
&lt;li&gt;flex 컨테이너를 선언시 아래와 같이 기본 값이 지정
&lt;ul&gt;
&lt;li&gt;item은 행으로 나열&lt;/li&gt;
&lt;li&gt;item은 주축의 시작 선에서 시작&lt;/li&gt;
&lt;li&gt;item은 교차축의 크기를 채우기 위해 늘어남&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flex-wrap&lt;/code&gt; 속성은 &lt;code&gt;nowrap&lt;/code&gt;으로 지정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;Tip !

justify - main axis
align - cross axis

content - 여러 줄
items - 한 줄
self - 개별 요소
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;flex-direction&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;쌓이는 방향 설정 (main-axis 의 방향만 바뀜. flex 는 single-direction layout concept 이기 때문)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;row (기본값)
&lt;ul&gt;
&lt;li&gt;가로로 요소가 쌓임&lt;/li&gt;
&lt;li&gt;row 는 주축의 방향을 왼쪽에서 오른쪽으로 흐르게 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;row-reverse&lt;/li&gt;
&lt;li&gt;column
&lt;ul&gt;
&lt;li&gt;세로로 요소가 쌓임&lt;/li&gt;
&lt;li&gt;column 은 주축의 방향을 위에서 아래로 흐르게 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;column-reverse&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;flex-wrap&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;item들이 강제로 한 줄에 배치 되게 할 것인지 여부 설정&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;nowrap (기본 값)
&lt;ul&gt;
&lt;li&gt;모든 아이템들 한 줄에 나타내려고 함 (그래서 자리가 없어도 튀어나옴)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;wrap : 넘치면 그 다음 줄로&lt;/li&gt;
&lt;li&gt;wrap-reverse : 넘치면 그 윗줄로 (역순)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;flex-flow&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flex-direction 과 flex-wrap 의 shorthand&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;nt&#34;&gt;flex-flow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;nowrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;justify-content&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;main axis 정렬&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flex-direction: row&lt;/code&gt; 기준으로 작성됨&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;flex-start (기본 값)
&lt;ul&gt;
&lt;li&gt;시작 지점에서 쌓임(왼쪽 → 오른쪽)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;flex-end
&lt;ul&gt;
&lt;li&gt;쌓이는 방향이 반대 (&lt;code&gt;flex-direction: row-reverse&lt;/code&gt; 와는 다르다. 아이템의 순서는 그대로 정렬만 우측에 되는 것.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;space-between
&lt;ul&gt;
&lt;li&gt;좌우 정렬 (item 들 간격 동일)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;space-around
&lt;ul&gt;
&lt;li&gt;균등 좌우 정렬 (내부 요소 여백은 외곽 여백의 2배)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;space-evenly
&lt;ul&gt;
&lt;li&gt;균등 정렬 (내부 요소 여백과 외각 여백 모두 동일)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;align-items&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cross axis 여러 줄 정렬&lt;/p&gt;
&lt;p&gt;&lt;code&gt;flex-direction: row&lt;/code&gt; 기준으로 작성됨&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;stretch (기본 값)
&lt;ul&gt;
&lt;li&gt;컨테이너를 가득 채움&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;flex-start
&lt;ul&gt;
&lt;li&gt;위&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;flex-end
&lt;ul&gt;
&lt;li&gt;아래&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;baseline
&lt;ul&gt;
&lt;li&gt;item 내부의 text에 기준선을 맞춤&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;align-self&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;align-items 와 동일 (단, 개별 item 에 적용)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;auto (기본 값)&lt;/li&gt;
&lt;li&gt;flex-start&lt;/li&gt;
&lt;li&gt;flex-end&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;baseline&lt;/li&gt;
&lt;li&gt;stretch
&lt;ul&gt;
&lt;li&gt;부모 컨테이너에 자동으로 맞춰서 늘어난다. (Stretch &amp;lsquo;auto&amp;rsquo;-sized items to fit the container)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;order&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기본 값 : 0&lt;/li&gt;
&lt;li&gt;작은 숫자 일수록 앞(왼쪽)으로 이동.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;flex-grow&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기본 값 : 0&lt;/li&gt;
&lt;li&gt;주축에서 남는 공간을 항목들에게 분배하는 방법&lt;/li&gt;
&lt;li&gt;각 아이템의 상대적 비율을 정하는 것이 아님&lt;/li&gt;
&lt;li&gt;음수는 불가능&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;bootstrap&#34;&gt;Bootstrap&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The most popular HTML, CSS, and JS library in the world.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;트위터에서 시작된 오픈 소스 프론트엔드 라이브러리&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;웹 페이지에서 많이 쓰이는 요소를 거의 전부 내장하고 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;디자인을 할 시간이 크게 줄어들고, 여러 웹 브라우저를 지원하기 위한 크로스 브라우징에 골머리를 썩일 필요가 없다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;웹 브라우저 크기에 따라 자동으로 정렬되는 &amp;ldquo;그리드 시스템&amp;quot;을 지원하며,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;one souce multi use&amp;rdquo;&lt;/em&gt; → 반응형 웹 디자인을 추구한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;Responsive web design&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;layout은 방문자의 화면 해상도를 고려하여야 한다.&lt;/li&gt;
&lt;li&gt;스마트폰이나 태블릿 등 모바일 기기는 화면이 작기 때문에 가독성에 더욱 신경써야 한다.&lt;/li&gt;
&lt;li&gt;보통 웹사이트가 축소되어 가로 스크롤 없이 콘텐츠를 볼 수 있으나 글자가 너무 작아지기 때문이다.&lt;/li&gt;
&lt;li&gt;데스크탑용, 테블릿용, 모바일용 웹사이트를 별도 구축할 수도 있지만 One Source Multi Use의 관점에서 올바른 해결책은 아니다.&lt;/li&gt;
&lt;li&gt;반응형 웹 디자인(Responsive Web Design)은 화면 해상도에 따라 가로폭이나 배치를 변경하여 가독성을 높여 이러한 문제를 해결한다.&lt;/li&gt;
&lt;li&gt;즉, 하나의 웹사이트를 구축하여 다양한 디바이스의 화면 해상도에 최적화된 웹사이트를 제공하는 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;bootstrap-grid-system&#34;&gt;Bootstrap Grid System&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Grid System&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;부트스트랩의 grid system 은 containers, rows 그리고 columns 를 사용해서 컨텐츠를 레이아웃하고 정렬한다.&lt;/li&gt;
&lt;li&gt;모바일 우선 flexbox grid 를 사용하여 12개의 column 시스템을 가지고 있다.&lt;/li&gt;
&lt;li&gt;왜 12 columns 일까 ?
&lt;ul&gt;
&lt;li&gt;12는 약수가 가장 많기 때문에 한 줄에 표시할 수 있는 종류가 제일 많다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다음과 같은 구조로 사용한다.
&lt;ul&gt;
&lt;li&gt;.container &amp;gt; .row &amp;gt; col-*&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;.row&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row 는 columns 의 wrapper 이다.&lt;/li&gt;
&lt;li&gt;각 column 에는 공간 사이를 제어하기 위한 좌우 padding 값이 있는데 이를 &lt;code&gt;gutter&lt;/code&gt; 라고도 한다.
&lt;ul&gt;
&lt;li&gt;row 의 margin 값과 gutter 를 제거하려면 .row 에 &lt;code&gt;.no-gutters&lt;/code&gt; class 를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;.col /  .col-&lt;/strong&gt;*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;column class 는 row 당 가능한 12개 중 사용하려는 columns 수를 나타낸다.&lt;/li&gt;
&lt;li&gt;columns 너비는 백분율로 설정 되므로 항상 부모 요소를 기준으로 유동적으로 크기가 조정된다.&lt;/li&gt;
&lt;li&gt;grid layout 에서 내용은 반드시 columns 안에 있어야 하며 그리고 오직 columns 만 row 의 바로 하위 자식 일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;offset&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offset-*&lt;/code&gt; 은 지정한 만큼의 column 공간을 무시하고 다음 공간부터 컨텐츠를 적용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;Nesting&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.row &amp;gt; .col-* &amp;gt; .row &amp;gt; .col-* 의 방식으로 중첩 사용 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;Grid breakpoints&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;부트스트랩 grid system 은 다양한 디바이스에서 적용하기 위해 특정 px 조건에 대한 지점을 정해 두었는데 이를 breakpoints 라고 한다.&lt;/li&gt;
&lt;li&gt;부트스트랩은 대부분의 크기를 정의하기 위해 em 또는 rem 을 사용하지만 px 는 그리드  breakpoint 에 사용된다. (뷰포트 너비가 픽셀 단위이고 글꼴 크기에 따라 변하지 않기 때문)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;각각의 기술은 저마다 용도가 있고, 장단점이 있으며, 독립적인 용도를 갖추도록 설계된 기술은 없다.&lt;/p&gt;
&lt;p&gt;특정 상황에 어떤 기술이 가장 적합한 도구가 될 것인지 파악하는 데에는 많은 경험이 필요하다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;hr&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;참고문헌&#34;&gt;참고문헌&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Introduction&#34;&gt;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/CSS/float&#34;&gt;https://developer.mozilla.org/ko/docs/Web/CSS/float&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Floats&#34;&gt;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Floats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Flexbox&#34;&gt;https://developer.mozilla.org/ko/docs/Learn/CSS/CSS_layout/Flexbox&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Flexible_Box_Layout/Flexbox%ec%9d%98_%ea%b8%b0%eb%b3%b8_%ea%b0%9c%eb%85%90&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Flexible_Box_Layout/Flexbox%EC%9D%98_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Django 기본</title>
        <link>https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/icon.png" alt="Featured image of post Django 기본" /&gt;&lt;h1 id=&#34;django-wep-programming&#34;&gt;Django wep programming&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;파이썬으로 만들어진 무료 오픈소스 웹 애플리케이션 프레임워크&lt;/p&gt;
&lt;p&gt;즉, 쉽고 빠르게 웹사이트를 개발할 수 있도록 돕는 구성요소로 이루어진 웹 프레임워크&lt;/p&gt;
&lt;p&gt;여기서 프레임워크란, 애플리케이션 개발에 바탕이 되는 템플릿과 같은 역할을 하는 클래스들과 인터페이스의 집합&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;기본-생성-파일&#34;&gt;기본 생성 파일&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mysite: 프로젝트를 담는 공간&lt;/li&gt;
&lt;li&gt;manage.py: 프로젝트와 다양한 방법으로 상호작용 하는 커맨드라인의 유틸리티&lt;/li&gt;
&lt;li&gt;init.py: 파이썬으로 하여금 이 디렉토리를 패키지처럼 다루라고 알려주는 용도의 빈 파일&lt;/li&gt;
&lt;li&gt;setting.py: 현재 프로젝트의 환경 및 구성을 저장&lt;/li&gt;
&lt;li&gt;urls.py: 현재 프로젝트의 URL선언을 저장&lt;/li&gt;
&lt;li&gt;wsgi.py: 현재 프로젝트를 서비스하기 위한 WSGI 호환 웹 서비의 진입점&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;django-cycle&#34;&gt;django cycle&lt;/h2&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 70; flex-basis: 169px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/cycle.jpg&#34; data-size=&#34;600x848&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/cycle.jpg&#34;
				srcset=&#34;https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/cycle_hu8f247dc7b2ed912aa7dfae59c851bfd4_630666_480x0_resize_q75_box.jpg 480w, https://ssabum.github.io/p/django-%EA%B8%B0%EB%B3%B8/cycle_hu8f247dc7b2ed912aa7dfae59c851bfd4_630666_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;600&#34;
				height=&#34;848&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;django-명령어&#34;&gt;django 명령어&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 프로젝트 생성&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;django&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startproject&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;프로젝트명&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 앱 생성&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;startapp&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;앱명&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 서버가 제대로 동작하는지 로컬에서 확인, http://127.0.0.1:8000/에서 출력&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runserver&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# INSTALLED_APPS 설정을 탐색하여 데이터베이스 생성&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;migrate&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 데이터베이스에 테이블을 생성할 수 있도록 설계도를 작성&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;makemigrations&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;polls&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 데이터베이스에 실제 테이블을 생성&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;migrate&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# API를 사용하기 위해&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 생성한 모델을 추가&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;polls.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Question&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 관리자 생성&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# winpty: windows 콘솔과 통신이 가능한 인터페이스를 제공하는 windows software package&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;winpty&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;manage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createsuperuser&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;프로젝트와-앱&#34;&gt;프로젝트와 앱&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;앱: 특정한 기능을 수행하는 웹 어플리케이션, 다수의 프로젝트에 포함될 수 있다.&lt;/li&gt;
&lt;li&gt;프로젝트: 특정 웹 사이트를 위한 앱들과 각 설정들을 한데 묶어놓은 것, 다수의 앱을 포함할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;작동-순서&#34;&gt;작동 순서&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;view 내용 입력&lt;/li&gt;
&lt;li&gt;뷰를 호출하기 위한 연결 url 생성을 위해 &lt;code&gt;urls.py&lt;/code&gt; 파일 생성&lt;/li&gt;
&lt;li&gt;최상위 URLconf에서 생성한 &lt;code&gt;urls.py&lt;/code&gt;모듈을 바라보게 설정
&lt;ul&gt;
&lt;li&gt;이때 &lt;code&gt;include()&lt;/code&gt;함수는 다른 URLconf드을 참조할 수 있도록 도움&lt;/li&gt;
&lt;li&gt;만약 &lt;code&gt;127.0.0.1/polls/&lt;/code&gt;이라는 url을 받으면 파싱을 하여 분기, 해당 path인 &lt;code&gt;polls&lt;/code&gt;을 잡아내고 연결을 시켜줌&lt;/li&gt;
&lt;li&gt;연결된 &lt;code&gt;urls.py&lt;/code&gt;에서 path를 통해 &lt;code&gt;view&lt;/code&gt;로 연결&lt;/li&gt;
&lt;li&gt;&lt;code&gt;view&lt;/code&gt;내부의 함수를 통해 &lt;code&gt;response&lt;/code&gt;를 클라이언트에게 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;데이터베이스&#34;&gt;데이터베이스&lt;/h2&gt;
&lt;p&gt;django는 기본적으로 SQLite를 사용하도록 구성되어 있으며, 다른 데이터베이스를 사용하고 싶다면 &lt;code&gt;setting.py&lt;/code&gt;파일을 수정해서 사용할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;installed_apps&#34;&gt;INSTALLED_APPS&lt;/h2&gt;
&lt;p&gt;django를 사용할 때 기본적으로 딸려 오는 앱으로 추가적으로 모델을 사용하기 위해 추가하면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin: 관리용 사이트&lt;/li&gt;
&lt;li&gt;auth: 인증시스템&lt;/li&gt;
&lt;li&gt;contenttypes: 컨텐츠 타입을 위한 프레임워크&lt;/li&gt;
&lt;li&gt;sessions: 세션 프레임워크&lt;/li&gt;
&lt;li&gt;messages: 메세징 프레임워크&lt;/li&gt;
&lt;li&gt;staticfiles: 정적 파일을 관리하는 프레임워크&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;모델&#34;&gt;모델&lt;/h2&gt;
&lt;p&gt;부가적인 메타데이터를 가진 데이터베이스의 구조(layout)를 지칭&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;모델은 데이터에 관한 단 하나의, 가장 확실한 진리의 원천&lt;/p&gt;
&lt;p&gt;이 원칙에 따라 데이터 모델을 한곳에서 정의하고, 이것으로부터 자동으로 뭔가를 유도하는 것이 목표&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;api&#34;&gt;API&lt;/h2&gt;
&lt;p&gt;개발자가 필요로하는 데이터를 뽑아낼 수 있도록 하는 함수, 또는 서버에게 데이터베이스에게 데이터를 입력할 수 있도록 하는 함수&lt;/p&gt;
&lt;h2 id=&#34;admin-페이지&#34;&gt;Admin 페이지&lt;/h2&gt;
&lt;p&gt;사이트 관리를 위한 관리자 전용 페이지로 django는 자동으로 제공&lt;/p&gt;
&lt;h2 id=&#34;ssafy-class&#34;&gt;ssafy class&lt;/h2&gt;
&lt;h3 id=&#34;중요&#34;&gt;중요&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;urls.py&lt;/code&gt;: 주소 관리&lt;/p&gt;
&lt;p&gt;&lt;code&gt;views.py&lt;/code&gt;: 페이지 관리&lt;/p&gt;
&lt;p&gt;&lt;code&gt;models.py&lt;/code&gt;: 데이터베이스 관리&lt;/p&gt;
&lt;h3 id=&#34;실행순서&#34;&gt;실행순서&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;installed_apps: 앱 등록&lt;/li&gt;
&lt;li&gt;project/urls.py: path 등록&lt;/li&gt;
&lt;li&gt;app/views.py: 요청 수신/반환 함수 작성&lt;/li&gt;
&lt;li&gt;templates/index.html: templates 작성&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>HTML기초</title>
        <link>https://ssabum.github.io/p/html%EA%B8%B0%EC%B4%88/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/html%EA%B8%B0%EC%B4%88/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/html%EA%B8%B0%EC%B4%88/html.png" alt="Featured image of post HTML기초" /&gt;&lt;h1 id=&#34;html&#34;&gt;HTML&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;웹 컨텐츠의 의미와 구조를 정의할 때 사용하는 언어&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;html-기초&#34;&gt;HTML 기초&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Hyper&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;텍스트 등의 정보가 동일 선상에 있는 것이 아니라 다중으로 연결되어 있는 상태&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Hyper Text&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;참조(하이퍼링크)를 통해 사용자가 한 문서에서 다른 문서로 즉시 접근 할 수 잇는 텍스트&lt;/li&gt;
&lt;li&gt;하이퍼 텍스트가 쓰인 기술등 중 가장 중요한 2가지 (http, html)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Markup Language&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;특정 텍스트에 역할을 부여하는, 따라서 &amp;ldquo;마크업을 한다&amp;rdquo; 라고 하는 건 제목이 제목이라하고 본문이 본문이라고 마킹을 하는 것&lt;/li&gt;
&lt;li&gt;ex) h1 tag는 단순히 글자가 커지는 것이 아니라 의미론적으로 그 페이지에서 가장 핵심 주제를 의미하는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;html-기본-구조&#34;&gt;HTML 기본 구조&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;DOM&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DOM은 문서의 구조화된 표현(structured representation)을 제공하며 프로그래밍 언어가 DOM 구조에 접근할 수 있는 방법을 제공하여 그들이 문서 구조, 스타일, 내용 등을 변경할 수 있게 도움&lt;/li&gt;
&lt;li&gt;DOM은 동일한 문서를 표현하고, 저장하고, 조작하는 방법을 제공&lt;/li&gt;
&lt;li&gt;웹 페이지의 객체 지향 표현&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;요소 (Element)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML 요소는 시작 태그와 종료 태그 그리고 태그 사이에 위치한 내용으로 구성
&lt;ul&gt;
&lt;li&gt;태그(Element, 요소)는 컨텐츠(내용)를 감싸서 그 정보의 성격과 의미를 정의 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;내용이 없는 태그들
&lt;ul&gt;
&lt;li&gt;br, hr, img, input, link, meta&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;요소는 중첩(nested)될 수 있다.
&lt;ul&gt;
&lt;li&gt;이러한 중첩들로 하나의 문서를 완성해 나간다.&lt;/li&gt;
&lt;li&gt;그리고 항상 열고 닫는 태그 쌍이 잘 맞는지 잘 봐야한다.&lt;/li&gt;
&lt;li&gt;HTML은 오류를 뿜지 않고 그냥 레이아웃이 깨져버리기 때문에 어떤 면에서는 친절하게 오류 띄워주고 어디 틀렸는지 알려주는 프로그래밍 보다 디버깅이 힘들다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;속성 (Attribute)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;속성(Attribute)은 태그의 부가적인 정보가 들어온다.&lt;/li&gt;
&lt;li&gt;요소는 속성을 가질 수 있으며 요소에 추가적 정보(이미지 파일의 경로, 크기 등)를 제공한다.&lt;/li&gt;
&lt;li&gt;요소의 시작 태그에 위치해야 하며 &lt;strong&gt;이름&lt;/strong&gt;과 &lt;strong&gt;값&lt;/strong&gt;의 쌍을 이룬다.&lt;/li&gt;
&lt;li&gt;태그와 상관없이 사용 가능한 속성들(html global attribute)도 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;시맨틱-태그&#34;&gt;시맨틱 태그&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;브라우저, 검색엔진, 개발자 모두에게 콘텐츠의 의미를 명확히 설명하는 태그&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;읽기 쉬워진다. (개발자)
&lt;ul&gt;
&lt;li&gt;개발자가 의도한 요소의 의미가 명확히 드러나고 있다.이것은 코드의 가독성을 높이고 유지보수를 쉽게 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;접근성이 좋아진다. (검색엔진 및 보조기술 → 시력장애용 스크린리더 → 더 나은 경험 제공)
&lt;ul&gt;
&lt;li&gt;HTML 문서는 html 언어 + 사람이 읽을 수 있는 content의 조합인데, 검색 엔진은 HTML 코드만 잘 읽는다.&lt;/li&gt;
&lt;li&gt;그래서 이 검색 엔진이 HTML을 잘 이해하도록 시맨틱 태그 사용이 권장되고, 그러면 검색 엔진도 무슨 내용인지 이해할 수 있게 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;시맨틱 웹&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹에 존재하는 수많은 웹페이지들에 메타데이터를 부여하여, 기존의 단순한 데이터 집합이었던 웹페이지를 &amp;lsquo;의미&amp;rsquo;와 &amp;lsquo;관련성&amp;rsquo;을 가지는 거대한 데이터베이스로 구축하고자 하는 발상.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Learn/HTML/Introduction_to_HTML/Getting_started&#34;&gt;https://developer.mozilla.org/ko/docs/Learn/HTML/Introduction_to_HTML/Getting_started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/HTML/Global_attributes&#34;&gt;https://developer.mozilla.org/ko/docs/Web/HTML/Global_attributes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/ko/docs/Glossary/Semantics&#34;&gt;https://developer.mozilla.org/ko/docs/Glossary/Semantics&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>OOP</title>
        <link>https://ssabum.github.io/p/oop/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/oop/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/oop/oop.jpg" alt="Featured image of post OOP" /&gt;&lt;p&gt;&lt;code&gt;Object-Oriented Programming&lt;/code&gt;의 약자로 &lt;code&gt;객체지향프로그래밍&lt;/code&gt;이다.&lt;/p&gt;
&lt;h2 id=&#34;쉽게-말해&#34;&gt;쉽게 말해&lt;/h2&gt;
&lt;p&gt;주어 동사 형태로 프로그래밍하는 것!&lt;/p&gt;
&lt;h2 id=&#34;1-절차-지향-프로그래밍&#34;&gt;1. 절차 지향 프로그래밍&lt;/h2&gt;
&lt;p&gt;물이 위에서 아래로 흐르듯 순차적인 처리가 중요합니다. 프로그램 전체가 유기적으로 연결되도록 만드는 프로그래밍 기법입니다.&lt;/p&gt;
&lt;h2 id=&#34;2-객체-지향-프로그래밍&#34;&gt;2. 객체 지향 프로그래밍&lt;/h2&gt;
&lt;p&gt;실제 세계를 모델링해 소프트웨어를 개발하는 방법입니다. 객체지향 프로그래밍에서는 데이터와 절차를 하나의 덩어리로 묶어서 생각합니다. 마치 컴퓨터 부품을 하나씩 구매해 컴퓨터를 조립하는 것과 같은 방식입니다.&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 170; flex-basis: 408px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/oop/oop.PNG&#34; data-size=&#34;712x418&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/oop/oop.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/oop/oop_huf06d5544e5069df405ac6709e4a0fe14_327198_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/oop/oop_huf06d5544e5069df405ac6709e4a0fe14_327198_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;712&#34;
				height=&#34;418&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>SQLD</title>
        <link>https://ssabum.github.io/p/sqld/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/sqld/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/sqld/sql.png" alt="Featured image of post SQLD" /&gt;&lt;h1 id=&#34;sqld란-무엇일까&#34;&gt;SQLD란 무엇일까?&lt;/h1&gt;
&lt;p&gt;한국데이터산업진흥원에서 주관하는 시험으로, Structured  Query Language Developer의 줄임말로 데이터베이스 SQL국가공인 자격증이다😎&lt;/p&gt;
&lt;p&gt;저번주 올해 첫 시험인 03.20(토) 시험을 접수했고 앞으로 3주 가량 남은 상황, 오늘부터 SQLD 공부를 시작한다!!&lt;/p&gt;</description>
        </item>
        <item>
        <title>기술블로그 소개</title>
        <link>https://ssabum.github.io/p/%EA%B8%B0%EC%88%A0%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%86%8C%EA%B0%9C/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EA%B8%B0%EC%88%A0%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%86%8C%EA%B0%9C/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EA%B8%B0%EC%88%A0%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%86%8C%EA%B0%9C/tech.jpg" alt="Featured image of post 기술블로그 소개" /&gt;&lt;h2 id=&#34;국내-it기업-기술-블로그&#34;&gt;국내 IT기업 기술 블로그&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://d2.naver.com/home&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Naver D2&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 국내 최대 포털사이트 네이버의 기술블로그 Naver D2입니다. NAVER 개발자들이 직접 정리한 실전 개발 경험과 지식, 주요 개발자 행사 소식과 후기를 업로드합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://tech.kakao.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;kakao Tech&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 카카오의 기술 블로그로, 카카오 서비스를 만드는 개발자들의 실제 개발 사례를 중심으로 기술과 노하우를 전달합니다. 이벤트와 오픈소스, 채용 정보도 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/coupang-tech/technote/home&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;쿠팡 기술블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 국내 온라인 쇼핑 사이트 쿠팡의 기술블로그입니다. 쿠팡 글로벌 개발팀이 쿠팡을 만들고 진화시키면서 배운 점과 얻은 교훈을 비롯해 다양한 테크 관련 이야기를 전달합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/watcha&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;WATCHA 팀 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 국내 OTT 서비스의 대표 주자 왓챠의 팀 블로그입니다. 개발, 테크, 기술이 가장 메인 주제입니다. 종종 왓챠팀의 문화, 브랜딩 소식을 올리기도 합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/daangn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;당근마켓 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 2020년 6월 누적 2천만 다운로드, 월 순 방문자수 800만 명을 돌파한 중고거래 앱 서비스 당근마켓의 팀 블로그입니다. 개발, 테크 관련 콘텐츠가 주를 이룹니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://woowabros.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;우아한형제들 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 국내 대표 푸드 테크 서비스 배달의민족을 운영하는 우아한형제들의 기술 블로그입니다. 우아한 형제들의 대표적 개발자 양성 프로그램인 우아한 테크코스의 후기 포스팅이 올라오기도 합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://engineering.linecorp.com/ko/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;LINE Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 글로벌 메신저 서비스 LINE이 운영하는 기술 블로그입니다. 블로그 포스팅과 더불어 오픈소스와 채용정보도 확인하실 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://helloworld.kurly.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;마켓컬리 Tech Blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 코로나19 사태로 인해 최근 가장 주목 받는 기업 중 하나가 된 푸드 테크 기업 마켓컬리의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://blog.banksalad.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;뱅크샐러드 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 금융플랫폼 서비스 뱅크샐러드의 공식 블로그입니다. 기술, 개발, 테크 관련 콘텐츠가 주를 이루고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://meetup.toast.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;NHN 기술블로그 TOAST Meetup!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 종합 IT 기업 NHN의 기술 블로그입니다. 블로그 메인화면에서 기술을 공유하고 함께 성장해가는 개발 문화를 추구한다고 밝히고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://blog.gangnamunni.com/blog/tech/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;강남언니 공식 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 미용 의료 분야의 Tech 기업 강남언니의 공식 블로그입니다. 기술, 테크 주제의 콘텐츠와 함께 브랜드, 조직문화에 대해서도 공유합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/deliverytechkorea&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Delivery Tech Korea&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 푸드 테크 기업 딜리버리코리아의 기술 블로그입니다. 요기요&amp;amp;배달통 서비스 개발 및 협업 방식과 문화에 대한 포스팅을 업로드합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://hyperconnect.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;HYPER CONNECT 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 실시간 영상채팅 서비스 아자르(Azar)를 제작한 비디오 및 인공지능 기술 기반의 영상 기술 기업 하이퍼커넥트의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://spoqa.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Spoqa 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 매장 마케팅 솔루션 도도 포인트를 서비스하는 스포카의 기술 블로그입니다. 블로그 소개에서 건강한 오픈소스 커뮤니티 형성을 위해 배우고 개선한 것들을 오픈소스로 공개한다고 말합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;15)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://tech.socarcorp.kr/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;쏘카 기술블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 그린카와 더불어 국내 대표 카셰어링 서비스 쏘카의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;16)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.ridicorp.com/blog/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;리디 Tech blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 리디북스를 비롯해, 리디셀렉트, 리디페이퍼, 아웃스탠딩 등의 콘텐츠 플랫폼 서비스를 제공하는 리디코퍼레이션의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;17)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://blog.est.ai/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;이스트소프트 AI PLUS TECH&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 알집, 알약으로 익숙한 이스트소프트의 기술 블로그입니다. 주로 AI 주제의 콘텐츠를 포스팅합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;18)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/platfarm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;플랫팜 팀 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 이모티콘 콘텐츠 플랫폼이자 메신저 기업을 대상으로 하는 B2B 솔루션 Mojitok을 서비스하는 플랫팜의 팀 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;19)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://tech.lezhin.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;레진 기술 블로그&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 웹툰 서비스인 레진코믹스를 제작하는 레진엔터테인먼트가 운영하는 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://snack.planetarium.dev/kor/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;플라네타리움 엔지니어링 스낵&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 게임에 특화된 오픈 소스 P2P 라이브러리 Libplanet과, 중앙 서버 없는 온라인 게임 나인 크로니클을 제작하는 테크 기업, 플라네타리움의 기술 블로그입니다.&lt;/p&gt;
&lt;h2 id=&#34;국내-기술-콘텐츠-플랫폼&#34;&gt;국내 기술 콘텐츠 플랫폼&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://velog.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Velog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 개인 기술 블로그와 최신 콘텐츠를 찾을 수 있는, 기술 블로그 콘텐츠 큐레이션 플랫폼입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://news.hada.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;GeekNews&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 개발, 기술, IT 소식, 스타트업 등을 전하는 뉴스 큐레이션 플랫폼입니다. 해외 기술 동향과 관련된 소식을 확인하실 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://blog.gaerae.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;개발자스럽다&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 개발자를 위한 주요 소식과 뉴스레터를 공유하는 사이트입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.44bits.io/ko&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;44BITS&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 당근마켓 개발자를 비롯해, 총 5명의 개발자가 프로그래밍과 클라우드를 주요 주제로 운영하는 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://programmers.co.kr/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;프로그래머스&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 기술 중심 개발자 채용 플랫폼입니다. 기술 블로그는 아니지만 개발, IT 직군의 주요 채용 공고를 확인하실 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;해외-it-기업-기술-블로그&#34;&gt;해외 IT 기업 기술 블로그&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://engineering.fb.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Facebook Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계 최대 소셜 미디어 페이스북의 기술 블로그입니다. 인스타그램도 검색하면 기술 블로그는 나오지만 2019년 이후로 업데이트가 되지 않고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://developer.amazon.com/en-US/blogs/alexa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Amazon Alexa&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계 최대 이커머스 플랫폼 아마존의 기술 블로그입니다. Alexa는 아마존이 개발한 인공지능 플랫폼의 이름입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://developer.apple.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Apple Developer&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 앱스토어 내 앱 제작 등 애플 관련 서비스를 사용해야 하는 개발자들을 위해 만들어진 애플의 기술 블로그입니다. 애플 관련 주요 소식을 전달하는 뉴스룸에 더 가깝습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://netflixtechblog.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;THE NETFLIX TECH BLOG&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계적인 동영상 스트리밍 서비스 기업 넷플릭스의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://developers.googleblog.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Google Devlopers&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계 최대 테크 기업 구글의 기술 블로그입니다. 구글과 관련한 기술, 뉴스, 업데이트 내용을 주로 다룹니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://techcommunity.microsoft.com/t5/custom/page/page-id/Blogs&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Microsoft Tech Community&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계 최대 소프트웨어 기업 마이크로소프트도 기술 블로그를 운영하고 있습니다. 개발자들끼리 궁금한 점을 묻고 답할 수 있는 테크 커뮤니티도 잘 형성되어 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://engineering.linkedin.com/blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Linkedin Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 채용 중심의 소셜 미디어 링크드인의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://slack.engineering/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Slack Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 세계 대 협업 메신저인 슬랙의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://engineering.atspotify.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Spotify Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 머지 않은 미래에 한국 출시가 예상되는, 음원 스트리밍 플랫폼 스포티파이의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/paypal-engineering&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;PayPal Engineering Blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 미국의 간편 결제 서비스 페이팔의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://tech.ebayinc.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;ebay Tech Blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 국내에서는 G마켓, 옥션, G9를 서비스 중인 세계적인 오픈마켓 이베이의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://blog.twitter.com/engineering/en_us.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Twitter Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 페이스북과 더불어 대표적 소셜 미디어 중 하나인 트위터의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;13)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://technology.riotgames.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;RIOT GAMES TECHBLOG&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 롤이라는 이름으로 널리 알려진 인기 게임, 리그 오브 레전드를 서비스하는 라이엇 게임즈의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;14)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://www.figma.com/blog/section/engineering/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Figma Blog Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 스케치의 뒤를 이어 최근 많은 주목을 받고 있는 웹/앱 디자인 협업툴 피그마의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;15)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/airbnb-engineering&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Airbnb Engineering &amp;amp; Data Science&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 숙박 공유 플랫폼 에어비앤비의 기술 블로그입니다. 블로그 이름에서 알 수 있든 데이터 사이언스 관련 포스팅이 많습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;16)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/zoom-developer-blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Zoom Developer Blog&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 코로나19 사태의 수혜를 받은 대표적 기업, 화상회의 플랫폼 줌의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;17)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@Pinterest_Engineering&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Pinterest Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 디자이너와 그림에 관심 있는 분들의 필수 사이트, 핀터레스트의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;18)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://eng.uber.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Uber Engineering&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 차량 공유 서비스 (Rider Sharing) 우버의 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;19)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://medium.com/googleplaydev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Google Play Apps &amp;amp; Games&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 구글 플레이 관련 기술적 팁, 트렌드, 지식을 제공하는 구글 플레이 기술 블로그입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;20)&lt;/strong&gt; &lt;a class=&#34;link&#34; href=&#34;https://dropbox.tech/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;Drpbox Tech&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;· 웹 기반 파일 공유 서비스 드롭박스의 기술 블로그입니다.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>알고리즘 기초이론</title>
        <link>https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/</link>
        <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/</guid>
        <description>&lt;img src="https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/algorithm.png" alt="Featured image of post 알고리즘 기초이론" /&gt;&lt;p&gt;Algorithm기본 이론에 대해 알아보자&lt;/p&gt;
&lt;h2 id=&#34;big-oh-notation&#34;&gt;Big-Oh Notation&lt;/h2&gt;
&lt;p&gt;시간 복잡도 함수 중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 194; flex-basis: 466px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84.PNG&#34; data-size=&#34;744x383&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84_hua9bd9d58cc6ee3e5a99adde20f6be420_88853_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84_hua9bd9d58cc6ee3e5a99adde20f6be420_88853_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;744&#34;
				height=&#34;383&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;배열&#34;&gt;배열&lt;/h2&gt;
&lt;p&gt;일정한 자료형의 변수들을 하나의 이름으로 열거하여 사요하는 자료구조&lt;/p&gt;
&lt;h2 id=&#34;완전검색brute-force&#34;&gt;완전검색(Brute-force)&lt;/h2&gt;
&lt;p&gt;완전 검색 방법은 문제의 해법으로 생각할 수 있는 모든 경우의 수를 나열해보고 확인하는 기법&lt;/p&gt;
&lt;h2 id=&#34;정렬-알고리즘&#34;&gt;정렬 알고리즘&lt;/h2&gt;
&lt;p&gt;학습한 정렬 알고리즘의 특성&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 194; flex-basis: 466px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/sort.PNG&#34; data-size=&#34;751x386&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/sort.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/sort_hu36adc3d1da0e40d24c808d2d69069fa8_91559_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/sort_hu36adc3d1da0e40d24c808d2d69069fa8_91559_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;751&#34;
				height=&#34;386&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;너비우선탐색bfs--큐queue&#34;&gt;너비우선탐색(BFS) 👉 큐(queue)&lt;/h2&gt;
&lt;p&gt;매 단계에서 가능한 경우의 수들을 모두 확인하면서 탐색, 트리를 넓히면서 탐색하는 알고리즘&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 74; flex-basis: 178px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS.PNG&#34; data-size=&#34;340x457&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS_hucfe361b2ebebf3807c1838b1023ba040_40862_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS_hucfe361b2ebebf3807c1838b1023ba040_40862_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;340&#34;
				height=&#34;457&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;깊이우선탐색dfs--스택stack&#34;&gt;깊이우선탐색(DFS) 👉 스택(stack)&lt;/h2&gt;
&lt;p&gt;여러 경우의 수 중 하나를 선택, 선택 후 가능한 여러 경우의 수 중 하나를 선택&lt;/p&gt;
&lt;p&gt;매 단계에서 가능한 것 중 일단 하나를 선택해 끝을 볼 때까지 확인&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 140; flex-basis: 337px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS.PNG&#34; data-size=&#34;591x420&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS_hu7a8641cf791136f45bb26948a1926c82_50537_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS_hu7a8641cf791136f45bb26948a1926c82_50537_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;591&#34;
				height=&#34;420&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;스택stack&#34;&gt;스택(Stack)&lt;/h2&gt;
&lt;p&gt;자료를 차곡차곡 쌓는 것&lt;/p&gt;
&lt;p&gt;Last In First Out 👉 후입선출&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 82; flex-basis: 198px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/stack.PNG&#34; data-size=&#34;262x316&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/stack.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/stack_hu70112c4b6e22f0ac62cd7c5b83b21b15_21798_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/stack_hu70112c4b6e22f0ac62cd7c5b83b21b15_21798_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;262&#34;
				height=&#34;316&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;큐queue&#34;&gt;큐(Queue)&lt;/h2&gt;
&lt;p&gt;줄을 서서 기다리는 것&lt;/p&gt;
&lt;p&gt;First In First Out  👉 선입선출&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 239; flex-basis: 573px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/que.PNG&#34; data-size=&#34;440x184&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/que.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/que_hu8057b371c97227bb5708afff91523267_20600_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/que_hu8057b371c97227bb5708afff91523267_20600_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;440&#34;
				height=&#34;184&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;구현-순차&#34;&gt;구현 순차&lt;/h2&gt;
&lt;h3 id=&#34;dfs---깊이우선탐색&#34;&gt;DFS - 깊이우선탐색&lt;/h3&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 106; flex-basis: 256px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%84.PNG&#34; data-size=&#34;481x450&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%84.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%84_hu4c4f935e131bae62a2a41d448dbac421_83721_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%84_hu4c4f935e131bae62a2a41d448dbac421_83721_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;481&#34;
				height=&#34;450&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 359; flex-basis: 862px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%842.PNG&#34; data-size=&#34;1013x282&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%842.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%842_hu2b5821004fca053ae20babef34a1ad83_234219_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/DFS%EA%B5%AC%ED%98%842_hu2b5821004fca053ae20babef34a1ad83_234219_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;1013&#34;
				height=&#34;282&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;루트 노드 (시작점) 인 &lt;code&gt;A&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;A&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; 하면서 &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;A&lt;/code&gt; 는 지우고 &lt;code&gt;A&lt;/code&gt; 의 자식인 &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;B&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;B&lt;/code&gt; 는 지우고 &lt;code&gt;B&lt;/code&gt; 의 자식인 &lt;code&gt;E&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;E&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;E&lt;/code&gt; 는 지우고 &lt;code&gt;E&lt;/code&gt; 의 자식인 &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;J&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;I&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;I&lt;/code&gt; 는 자식이 없으므로 (끝에 도달했으므로) 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;J&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;J&lt;/code&gt; 또한 자식이 없으므로 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;C&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;C&lt;/code&gt; 는 지우고 &lt;code&gt;C&lt;/code&gt; 의 자식인 &lt;code&gt;F&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;F&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;F&lt;/code&gt; 는 자식이 없으므로 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택 맨 위에 있는 &lt;code&gt;D&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;D&lt;/code&gt; 는 지우고 &lt;code&gt;D&lt;/code&gt; 의 자식인 &lt;code&gt;H&lt;/code&gt;, &lt;code&gt;K&lt;/code&gt; 를 스택에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;G&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;G&lt;/code&gt; 는 자식이 없으므로 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;H&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;H&lt;/code&gt; 는 자식이 없으므로 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택의 맨 위에 있는 &lt;code&gt;K&lt;/code&gt; 를 &lt;code&gt;Pop&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;K&lt;/code&gt; 는 자식이 없으므로 스택에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스택이 비었습니다. 이 말은 모든 노드를 탐색했다는 뜻이죠!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;bfs---너비우선탐색&#34;&gt;BFS - 너비우선탐색&lt;/h3&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 103; flex-basis: 249px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%84.PNG&#34; data-size=&#34;501x482&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%84.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%84_hudcdd5505edf22163725a5a2ee85d4aeb_86072_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%84_hudcdd5505edf22163725a5a2ee85d4aeb_86072_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;501&#34;
				height=&#34;482&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 37; flex-basis: 89px&#34;&gt;
		&lt;a href=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%842.PNG&#34; data-size=&#34;289x776&#34;&gt;&lt;img src=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%842.PNG&#34;
				srcset=&#34;https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%842_hu2d05b62c95c29493a8baebd036133100_84906_480x0_resize_box_2.PNG 480w, https://ssabum.github.io/p/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88%EC%9D%B4%EB%A1%A0/BFS%EA%B5%AC%ED%98%842_hu2d05b62c95c29493a8baebd036133100_84906_1024x0_resize_box_2.PNG 1024w&#34;
				width=&#34;289&#34;
				height=&#34;776&#34;
				loading=&#34;lazy&#34;
				&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;루트 노드 (시작점) 인 &lt;code&gt;A&lt;/code&gt; 를 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;A&lt;/code&gt;를 &lt;code&gt;Dequeue&lt;/code&gt; 하면서 &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;A&lt;/code&gt; 는 지우고 &lt;code&gt;A&lt;/code&gt; 의 바로 다음 자식인 &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;를 큐의 오른쪽에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 B 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, B 는 지우고 B 의 바로 다음 자식인 E 만 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;C&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;C&lt;/code&gt; 는 지우고 &lt;code&gt;C&lt;/code&gt; 의 바로 다음 자식인 &lt;code&gt;F&lt;/code&gt; 를 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;D&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;D&lt;/code&gt; 는 지우고 &lt;code&gt;C&lt;/code&gt; 의 바로 다음 자식인 &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt; 를 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;E&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;E&lt;/code&gt; 는 지우고 &lt;code&gt;E&lt;/code&gt; 의 바로 다음 자식인 &lt;code&gt;I&lt;/code&gt;, &lt;code&gt;J&lt;/code&gt; 를 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;F&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;F&lt;/code&gt; 는 자식이 없으므로 큐에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;G&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;G&lt;/code&gt; 는 자식이 없으므로 큐에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;H&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 즉, &lt;code&gt;H&lt;/code&gt; 는 지우고 &lt;code&gt;H&lt;/code&gt; 의 바로 다음 자식인 &lt;code&gt;K&lt;/code&gt; 를 큐에 넣습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;I&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;I&lt;/code&gt; 는 자식이 없으므로 큐에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;J&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;J&lt;/code&gt; 는 자식이 없으므로 큐에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐의 맨 왼쪽에 있는 &lt;code&gt;K&lt;/code&gt; 를 &lt;code&gt;Dequeue&lt;/code&gt; and &lt;code&gt;Expand&lt;/code&gt; 합니다. 이 때, &lt;code&gt;K&lt;/code&gt; 는 자식이 없으므로 큐에 넣을 것이 없습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;큐가 비었습니다. 모든 노드를 탐색했다는 뜻이죠!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        
    </channel>
</rss>
